PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL);
INSERT INTO django_migrations VALUES(1,'contenttypes','0001_initial','2019-12-13 03:02:15.989991');
INSERT INTO django_migrations VALUES(2,'auth','0001_initial','2019-12-13 03:02:16.091791');
INSERT INTO django_migrations VALUES(3,'admin','0001_initial','2019-12-13 03:02:16.209160');
INSERT INTO django_migrations VALUES(4,'admin','0002_logentry_remove_auto_add','2019-12-13 03:02:16.326829');
INSERT INTO django_migrations VALUES(5,'admin','0003_logentry_add_action_flag_choices','2019-12-13 03:02:16.450427');
INSERT INTO django_migrations VALUES(6,'contenttypes','0002_remove_content_type_name','2019-12-13 03:02:16.582584');
INSERT INTO django_migrations VALUES(7,'auth','0002_alter_permission_name_max_length','2019-12-13 03:02:16.688424');
INSERT INTO django_migrations VALUES(8,'auth','0003_alter_user_email_max_length','2019-12-13 03:02:16.821463');
INSERT INTO django_migrations VALUES(9,'auth','0004_alter_user_username_opts','2019-12-13 03:02:16.929759');
INSERT INTO django_migrations VALUES(10,'auth','0005_alter_user_last_login_null','2019-12-13 03:02:17.033539');
INSERT INTO django_migrations VALUES(11,'auth','0006_require_contenttypes_0002','2019-12-13 03:02:17.133866');
INSERT INTO django_migrations VALUES(12,'auth','0007_alter_validators_add_error_messages','2019-12-13 03:02:17.245778');
INSERT INTO django_migrations VALUES(13,'auth','0008_alter_user_username_max_length','2019-12-13 03:02:17.371393');
INSERT INTO django_migrations VALUES(14,'auth','0009_alter_user_last_name_max_length','2019-12-13 03:02:17.498731');
INSERT INTO django_migrations VALUES(15,'auth','0010_alter_group_name_max_length','2019-12-13 03:02:17.609287');
INSERT INTO django_migrations VALUES(16,'auth','0011_update_proxy_permissions','2019-12-13 03:02:17.732123');
INSERT INTO django_migrations VALUES(17,'sessions','0001_initial','2019-12-13 03:02:17.838527');
INSERT INTO django_migrations VALUES(18,'learning_logs','0001_initial','2019-12-13 03:31:20.381771');
INSERT INTO django_migrations VALUES(19,'learning_logs','0002_entry','2019-12-13 12:36:26.208337');
INSERT INTO django_migrations VALUES(20,'learning_logs','0003_auto_20191214_0951','2019-12-14 01:51:40.529756');
INSERT INTO django_migrations VALUES(21,'learning_logs','0004_topic_owner','2019-12-16 15:28:15.002988');
INSERT INTO django_migrations VALUES(22,'learning_logs','0005_entry_describe','2019-12-20 09:40:45.220093');
INSERT INTO django_migrations VALUES(23,'api','0001_initial','2019-12-22 07:39:46.684639');
CREATE TABLE IF NOT EXISTS "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "auth_user_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "auth_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "action_time" datetime NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0));
INSERT INTO django_admin_log VALUES(1,'2019-12-13 05:49:26.324762','1','Chess','[{"added": {}}]',7,1,1);
INSERT INTO django_admin_log VALUES(2,'2019-12-13 05:49:53.621542','2','Rock Climbing','[{"added": {}}]',7,1,1);
INSERT INTO django_admin_log VALUES(3,'2019-12-13 09:14:44.836421','2','Rock Climbing','[]',7,1,2);
INSERT INTO django_admin_log VALUES(4,'2019-12-13 14:24:05.793451','1','The opening is the first part of the game ,roughly...','[{"added": {}}]',8,1,1);
INSERT INTO django_admin_log VALUES(5,'2019-12-13 14:24:09.725831','1','The opening is the first part of the game ,roughly...','[]',8,1,2);
INSERT INTO django_admin_log VALUES(6,'2019-12-13 14:26:44.307851','2','In the opening phase of the game, it''s important t...','[{"added": {}}]',8,1,1);
INSERT INTO django_admin_log VALUES(7,'2019-12-13 14:28:17.270885','3','最重要的攀岩概念之一是尽可能让双脚承受体重。有谬误认为攀岩能依靠手臂的力量坚持一整天。实际上，优秀的...','[{"added": {}}]',8,1,1);
INSERT INTO django_admin_log VALUES(8,'2019-12-13 14:28:56.789412','4','111...','[{"added": {}}]',8,1,1);
INSERT INTO django_admin_log VALUES(9,'2019-12-13 14:29:04.627252','4','111...','',8,1,3);
INSERT INTO django_admin_log VALUES(10,'2019-12-14 01:54:16.454867','3','django遇到的坑','[{"added": {}}]',7,1,1);
INSERT INTO django_admin_log VALUES(11,'2019-12-14 01:57:26.962910','4','数据库查找的方法有些是按照date_added来查找的，如order_by,all等方法，必须严格。...','[{"added": {}}]',8,1,1);
INSERT INTO django_admin_log VALUES(12,'2019-12-14 02:00:13.855666','5','django2中要写这样的path('''', include(''learning_logs.urls''...','[{"added": {}}]',8,1,1);
INSERT INTO django_admin_log VALUES(13,'2019-12-14 02:01:17.390364','6','django正则化路径使用re_path(r''^topics/?P<topic_id>(\d+)/$...','[{"added": {}}]',8,1,1);
INSERT INTO django_admin_log VALUES(14,'2019-12-14 04:19:52.238683','4','111','',7,1,3);
INSERT INTO django_admin_log VALUES(15,'2019-12-16 15:49:32.530354','2','test','[{"added": {}}]',4,1,1);
INSERT INTO django_admin_log VALUES(16,'2019-12-16 15:49:53.403223','2','test','[{"changed": {"fields": ["First name", "Last name", "Email address"]}}]',4,1,2);
INSERT INTO django_admin_log VALUES(17,'2019-12-17 02:28:13.116511','9','1111','',8,1,3);
INSERT INTO django_admin_log VALUES(18,'2019-12-20 10:45:39.385398','10','test1','[{"changed": {"fields": ["Describe"]}}]',8,1,2);
INSERT INTO django_admin_log VALUES(19,'2019-12-20 10:46:08.589981','1','The opening is the first part of the game ,roughly...','[{"changed": {"fields": ["Describe"]}}]',8,1,2);
INSERT INTO django_admin_log VALUES(20,'2019-12-20 12:18:22.147455','8','111','',8,1,3);
CREATE TABLE IF NOT EXISTS "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL);
INSERT INTO django_content_type VALUES(1,'admin','logentry');
INSERT INTO django_content_type VALUES(2,'auth','permission');
INSERT INTO django_content_type VALUES(3,'auth','group');
INSERT INTO django_content_type VALUES(4,'auth','user');
INSERT INTO django_content_type VALUES(5,'contenttypes','contenttype');
INSERT INTO django_content_type VALUES(6,'sessions','session');
INSERT INTO django_content_type VALUES(7,'learning_logs','topic');
INSERT INTO django_content_type VALUES(8,'learning_logs','entry');
INSERT INTO django_content_type VALUES(9,'api','apidescribe');
CREATE TABLE IF NOT EXISTS "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL);
INSERT INTO auth_permission VALUES(1,1,'add_logentry','Can add log entry');
INSERT INTO auth_permission VALUES(2,1,'change_logentry','Can change log entry');
INSERT INTO auth_permission VALUES(3,1,'delete_logentry','Can delete log entry');
INSERT INTO auth_permission VALUES(4,1,'view_logentry','Can view log entry');
INSERT INTO auth_permission VALUES(5,2,'add_permission','Can add permission');
INSERT INTO auth_permission VALUES(6,2,'change_permission','Can change permission');
INSERT INTO auth_permission VALUES(7,2,'delete_permission','Can delete permission');
INSERT INTO auth_permission VALUES(8,2,'view_permission','Can view permission');
INSERT INTO auth_permission VALUES(9,3,'add_group','Can add group');
INSERT INTO auth_permission VALUES(10,3,'change_group','Can change group');
INSERT INTO auth_permission VALUES(11,3,'delete_group','Can delete group');
INSERT INTO auth_permission VALUES(12,3,'view_group','Can view group');
INSERT INTO auth_permission VALUES(13,4,'add_user','Can add user');
INSERT INTO auth_permission VALUES(14,4,'change_user','Can change user');
INSERT INTO auth_permission VALUES(15,4,'delete_user','Can delete user');
INSERT INTO auth_permission VALUES(16,4,'view_user','Can view user');
INSERT INTO auth_permission VALUES(17,5,'add_contenttype','Can add content type');
INSERT INTO auth_permission VALUES(18,5,'change_contenttype','Can change content type');
INSERT INTO auth_permission VALUES(19,5,'delete_contenttype','Can delete content type');
INSERT INTO auth_permission VALUES(20,5,'view_contenttype','Can view content type');
INSERT INTO auth_permission VALUES(21,6,'add_session','Can add session');
INSERT INTO auth_permission VALUES(22,6,'change_session','Can change session');
INSERT INTO auth_permission VALUES(23,6,'delete_session','Can delete session');
INSERT INTO auth_permission VALUES(24,6,'view_session','Can view session');
INSERT INTO auth_permission VALUES(25,7,'add_topic','Can add topic');
INSERT INTO auth_permission VALUES(26,7,'change_topic','Can change topic');
INSERT INTO auth_permission VALUES(27,7,'delete_topic','Can delete topic');
INSERT INTO auth_permission VALUES(28,7,'view_topic','Can view topic');
INSERT INTO auth_permission VALUES(29,8,'add_entry','Can add entry');
INSERT INTO auth_permission VALUES(30,8,'change_entry','Can change entry');
INSERT INTO auth_permission VALUES(31,8,'delete_entry','Can delete entry');
INSERT INTO auth_permission VALUES(32,8,'view_entry','Can view entry');
INSERT INTO auth_permission VALUES(33,9,'add_apidescribe','Can add api describe');
INSERT INTO auth_permission VALUES(34,9,'change_apidescribe','Can change api describe');
INSERT INTO auth_permission VALUES(35,9,'delete_apidescribe','Can delete api describe');
INSERT INTO auth_permission VALUES(36,9,'view_apidescribe','Can view api describe');
CREATE TABLE IF NOT EXISTS "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "last_name" varchar(150) NOT NULL);
INSERT INTO auth_user VALUES(1,'pbkdf2_sha256$180000$Zv7JA3ZEv1Nk$DbK2U5jDwTenZLg40LyA8p8s9SgkXdOyXUA5sWkxWok=','2019-12-22 07:44:59.727322',1,'linhao','','2406925375@qq.com',1,1,'2019-12-13 03:34:40.175608','');
INSERT INTO auth_user VALUES(2,'pbkdf2_sha256$180000$A9UnHGCHUtJL$VLItSfmaFIU9J41DIF+FJla77zmimhbWWhE84OSv1Do=','2019-12-16 15:50:41.298686',0,'test','lin','15774518534@163.com',0,1,'2019-12-16 15:49:32','hao');
CREATE TABLE IF NOT EXISTS "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(150) NOT NULL UNIQUE);
CREATE TABLE IF NOT EXISTS "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL);
INSERT INTO django_session VALUES('p5rh2u3jf9kme51hmta07q195svz596d','MDJiYTc4OTE5ZDI4NzFkZTQ4ZjM4YjhlNTRhMTc5ODE4MGViOWM5YTp7fQ==','2019-12-30 14:28:16.974735');
INSERT INTO django_session VALUES('25vjns4vfow1u440rwkf9i0wcqirptet','YWYxYzQ5ZTJmZjBiZmQxOTE0MmU3YTJkZjEyNGI5MjQyZDNmNzUxOTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJlY2M1NDdhMmNlNjJlNDY1YmI5YWQ4YTEyZmY3ZjY3OWVkMTc4Y2E0In0=','2020-01-05 07:44:59.818070');
CREATE TABLE IF NOT EXISTS "learning_logs_topic" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "text" varchar(200) NOT NULL, "date_added" datetime NOT NULL, "owner_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED);
INSERT INTO learning_logs_topic VALUES(1,'Chess','2019-12-13 05:49:26.323257',1);
INSERT INTO learning_logs_topic VALUES(2,'Rock Climbing','2019-12-13 05:49:53.620038',1);
INSERT INTO learning_logs_topic VALUES(3,'django遇到的坑','2019-12-14 01:54:16.453415',1);
INSERT INTO learning_logs_topic VALUES(4,'111','2019-12-17 02:15:56.952021',2);
INSERT INTO learning_logs_topic VALUES(5,'test','2019-12-24 06:40:06.106470',1);
INSERT INTO learning_logs_topic VALUES(6,'test','2019-12-24 06:41:35.100823',1);
INSERT INTO learning_logs_topic VALUES(7,'test1','2019-12-24 06:41:50.542364',1);
CREATE TABLE IF NOT EXISTS "learning_logs_entry" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "text" text NOT NULL, "date_added" datetime NOT NULL, "topic_id" integer NOT NULL REFERENCES "learning_logs_topic" ("id") DEFERRABLE INITIALLY DEFERRED, "describe" text NOT NULL);
INSERT INTO learning_logs_entry VALUES(1,'The opening is the first part of the game ,roughly the first ten moves or so. In the opening, it''s a good idea to do three things - bring out your bishops and knights, try to control the center of  the board, and castle your king','2019-12-13 14:24:05.792450',1,'describe');
INSERT INTO learning_logs_entry VALUES(2,'In the opening phase of the game, it''s important to bring out your bishops and knights. These pieces are powerful and maneuverable enough to play a significant role in the beginning moves of a game','2019-12-13 14:26:44.306346',1,'');
INSERT INTO learning_logs_entry VALUES(3,'最重要的攀岩概念之一是尽可能让双脚承受体重。有谬误认为攀岩能依靠手臂的力量坚持一整天。实际上，优秀的攀岩都经过专门训练，能够尽可能让双脚承受体重。','2019-12-13 14:28:17.269884',2,'');
INSERT INTO learning_logs_entry VALUES(4,'数据库查找的方法有些是按照date_added来查找的，如order_by,all等方法，必须严格。并且修改完数据库依次执行命令python manage.py makemigrations learning_logs(app名字)，python manage.py migrate已修改数据库/迁移数据库','2019-12-14 01:57:26.961909',3,'');
INSERT INTO learning_logs_entry VALUES(5,'django2中要写这样的path('''', include(''learning_logs.urls'', namespace=''learning_logs'')),代码添加在项目的urls.py，必须在所在app的urls.py中加入app_name = ''learning_logs''','2019-12-14 02:00:13.854665',3,'');
INSERT INTO learning_logs_entry VALUES(6,'django正则化路径使用re_path(r''^topics/?P<topic_id>(\d+)/$'', views.topic, name=''topic'')，且传进入的参数要（）处理。','2019-12-14 02:01:17.389362',3,'');
INSERT INTO learning_logs_entry VALUES(7,replace(replace('使用国内镜像避免下载速度太慢的问题 \r\npip install -i https://pypi.tuna.tsinghua.edu.cn/simple gevent','\r',char(13)),'\n',char(10)),'2019-12-16 13:50:40.395332',3,'');
CREATE TABLE IF NOT EXISTS "api_apidescribe" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(200) NOT NULL, "describe" varchar(200) NOT NULL, "url" varchar(200) NOT NULL, "method" varchar(200) NOT NULL, "date_added" datetime NOT NULL, "input_para" varchar(400) NOT NULL, "return_value" varchar(400) NOT NULL, "status_code" varchar(400) NOT NULL, "attention" varchar(400) NOT NULL);
INSERT INTO api_apidescribe VALUES(1,'添加topic接口','在登陆条件下，在个人账户中创建一个新topic','http://127.0.0.1:8000/new_topic/','POST','2019-12-22 08:21:28.277803','text                   #topic的标题',replace(replace('{    \r\n    ''status'':200,\r\n    ''message'' : ''add topic success''\r\n}','\r',char(13)),'\n',char(10)),replace(replace('200 : add topic success\r\n10021 : parameter error\r\n10022 : topic text already exist','\r',char(13)),'\n',char(10)),'添加后自动记录时间和使用者，传入多余参数忽略');
INSERT INTO api_apidescribe VALUES(2,'查询topic接口','查询topic接口','http://127.0.0.1:8000/api/get_topic_list/','GET','2019-12-22 09:11:34.278401','null',replace(replace('{\r\n    "data": [\r\n        {\r\n            "topicname": "chess",\r\n            "date": "------",\r\n            "owner": "linhao"\r\n        },\r\n        {\r\n            "topicname": "django",\r\n            "date": "------",\r\n            "owner": "linhao"\r\n        }\r\n    ],\r\n    "message": "success",\r\n    "status": 200\r\n}','\r',char(13)),'\n',char(10)),'200 ：success','查询所有topic');
DELETE FROM sqlite_sequence;
INSERT INTO sqlite_sequence VALUES('django_migrations',23);
INSERT INTO sqlite_sequence VALUES('django_admin_log',20);
INSERT INTO sqlite_sequence VALUES('django_content_type',9);
INSERT INTO sqlite_sequence VALUES('auth_permission',36);
INSERT INTO sqlite_sequence VALUES('auth_user',2);
INSERT INTO sqlite_sequence VALUES('auth_group',0);
INSERT INTO sqlite_sequence VALUES('learning_logs_topic',7);
INSERT INTO sqlite_sequence VALUES('learning_logs_entry',11);
INSERT INTO sqlite_sequence VALUES('api_apidescribe',2);
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_user_groups_user_id_group_id_94350c0c_uniq" ON "auth_user_groups" ("user_id", "group_id");
CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id");
CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id");
CREATE UNIQUE INDEX "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" ON "auth_user_user_permissions" ("user_id", "permission_id");
CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id");
CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id");
CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX "learning_logs_topic_owner_id_67ecce32" ON "learning_logs_topic" ("owner_id");
CREATE INDEX "learning_logs_entry_topic_id_83697a9a" ON "learning_logs_entry" ("topic_id");
COMMIT;
